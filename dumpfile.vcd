$date
	Wed Oct 31 17:03:34 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$scope module PE $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # z $end
$var wire 16 $ result [15:0] $end
$var wire 7 % op_cc_23 [6:0] $end
$var wire 7 & op_cc_12 [6:0] $end
$var wire 16 ' op2_12 [15:0] $end
$var wire 16 ( ir [15:0] $end
$var wire 1 ) haltedP $end
$var wire 16 * Rd_12 [15:0] $end
$var wire 16 + PCs4_to_reg [15:0] $end
$var wire 16 , PCfollow_23 [15:0] $end
$var wire 16 - PCfollow_12 [15:0] $end
$var wire 16 . PCfollow_01 [15:0] $end
$var reg 1 / halt $end
$scope module s0 $end
$var wire 16 0 R15 [15:0] $end
$var wire 1 1 Z $end
$var wire 1 ! clk $end
$var wire 1 2 insertNOP $end
$var wire 16 3 irInitial [15:0] $end
$var wire 1 " reset $end
$var wire 16 4 ir [15:0] $end
$var wire 1 ) halt $end
$var wire 2 5 CC [1:0] $end
$var reg 16 6 PC [15:0] $end
$var reg 16 7 PCfollow [15:0] $end
$upscope $end
$scope module s1 $end
$var wire 16 8 Rd_out [15:0] $end
$var wire 1 ! clk $end
$var wire 16 9 ir [15:0] $end
$var wire 16 : pc [15:0] $end
$var wire 1 " reset $end
$var wire 16 ; pc_to_reg [15:0] $end
$var wire 5 < op_code [4:0] $end
$var wire 16 = op2_out [15:0] $end
$var wire 1 > immFlag $end
$var wire 2 ? cc [1:0] $end
$var wire 1 @ Rd $end
$var reg 7 A op_cc_out [6:0] $end
$var reg 16 B pc_follow [15:0] $end
$var reg 12 C pre [11:0] $end
$var reg 1 D preFlag $end
$upscope $end
$scope module s2 $end
$var wire 16 E addr [15:0] $end
$var wire 1 ! clk $end
$var wire 16 F data [15:0] $end
$var wire 7 G op_cc_in [6:0] $end
$var wire 16 H pc [15:0] $end
$var wire 1 " reset $end
$var wire 5 I op [4:0] $end
$var reg 16 J data_latch [15:0] $end
$var reg 7 K op_cc_out [6:0] $end
$var reg 16 L pc_follow [15:0] $end
$var reg 16 M value_out [15:0] $end
$upscope $end
$scope module s3 $end
$var wire 1 ! clk $end
$var wire 7 N op_cc_in [6:0] $end
$var wire 16 O pc [15:0] $end
$var wire 1 " reset $end
$var wire 16 P result [15:0] $end
$var wire 1 Q z $end
$var wire 2 R cc [1:0] $end
$var reg 16 S pc_follow [15:0] $end
$var reg 1 # z_out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx S
bx R
zQ
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
b100 F
b0 E
0D
b0 C
bx B
bx A
1@
b0 ?
1>
b100 =
b1000 <
bx ;
bx :
b100000100010100 9
b0 8
bx 7
b0 6
b0 5
b100000100010100 4
b100000100010100 3
02
01
b0 0
0/
bx .
bx -
bx ,
bx +
b0 *
0)
b100000100010100 (
b100 '
bx &
bx %
bx $
x#
0"
0!
$end
#10
1"
#20
0"
#30
b10 '
b10 =
b10 F
b10001 <
b1000100100010010 (
b1000100100010010 4
b1000100100010010 9
b1000 I
b1000100100010010 3
b1 6
b0 .
b0 7
b0 :
b100000 &
b100000 A
b100000 G
b100 J
z#
b0 $
b0 M
b0 P
1!
#40
0!
#50
b0 '
b0 =
b0 F
0@
0>
12
b10100 <
b0 ?
b0 R
b10001 I
b11 5
b1010000000000000 (
b1010000000000000 4
b1010000000000000 9
b100000 %
b100000 K
b100000 N
b10 J
b1000100 &
b1000100 A
b1000100 G
b0 -
b0 B
b0 H
b11100010010 3
b10 6
b1 .
b1 7
b1 :
b100 $
b100 M
b100 P
1!
#60
0!
#70
02
b0 5
b10100 I
b1010000000000000 3
b11 6
b10 .
b10 7
b10 :
b1010000 &
b1010000 A
b1010000 G
b1 -
b1 B
b1 H
b1000100 %
b1000100 K
b1000100 N
b0 ,
b0 L
b0 O
b0 J
b1111111111111110 $
b1111111111111110 M
b1111111111111110 P
1!
#80
0!
#90
b1010000 %
b1010000 K
b1010000 N
b1 ,
b1 L
b1 O
b10 -
b10 B
b10 H
b100 6
b11 .
b11 7
b11 :
b0 $
b0 M
b0 P
1!
#100
0!
#110
b101 6
b100 .
b100 7
b100 :
b11 -
b11 B
b11 H
b10 ,
b10 L
b10 O
1!
#120
0!
#130
1)
b10011 <
b1001100000000000 (
b1001100000000000 4
b1001100000000000 9
b11 ,
b11 L
b11 O
b100 -
b100 B
b100 H
b1001100000000000 3
b110 6
b101 .
b101 7
b101 :
1!
#140
0!
#150
bx '
bx =
bx F
x2
bx *
bx 8
bx E
x@
x)
bx <
bx ?
x>
bx 5
bx (
bx 4
bx 9
b10011 I
bx 3
b111 6
b110 .
b110 7
b110 :
b1001100 &
b1001100 A
b1001100 G
b101 -
b101 B
b101 H
b100 ,
b100 L
b100 O
1/
1!
#160
0!
