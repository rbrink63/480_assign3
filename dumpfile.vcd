$date
	Tue Oct 30 17:06:05 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$scope module PE $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 16 # result [15:0] $end
$var wire 7 $ op_cc_23 [6:0] $end
$var wire 7 % op_cc_12 [6:0] $end
$var wire 16 & op2_12 [15:0] $end
$var wire 16 ' ir [15:0] $end
$var wire 1 ( haltedP $end
$var wire 16 ) Rd_12 [15:0] $end
$var wire 16 * PCfollow_23 [15:0] $end
$var wire 16 + PCfollow_12 [15:0] $end
$var wire 16 , PCfollow_01 [15:0] $end
$var reg 1 - halt $end
$scope module s0 $end
$var wire 16 . R15 [15:0] $end
$var wire 1 / Z $end
$var wire 1 ! clk $end
$var wire 1 0 insertNOP $end
$var wire 16 1 irInitial [15:0] $end
$var wire 1 " reset $end
$var wire 16 2 ir [15:0] $end
$var wire 1 ( halt $end
$var wire 2 3 CC [1:0] $end
$var reg 16 4 PC [15:0] $end
$var reg 16 5 PCfollow [15:0] $end
$upscope $end
$scope module s1 $end
$var wire 16 6 Rd_out [15:0] $end
$var wire 1 ! clk $end
$var wire 16 7 ir [15:0] $end
$var wire 16 8 pc [15:0] $end
$var wire 1 " reset $end
$var wire 5 9 op_code [4:0] $end
$var wire 16 : op2_out [15:0] $end
$var wire 1 ; immFlag $end
$var wire 2 < cc [1:0] $end
$var wire 1 = Rd $end
$var reg 7 > op_cc_out [6:0] $end
$var reg 16 ? pc_follow [15:0] $end
$var reg 12 @ pre [11:0] $end
$var reg 1 A preFlag $end
$upscope $end
$scope module s2 $end
$var wire 16 B addr [15:0] $end
$var wire 1 ! clk $end
$var wire 16 C data [15:0] $end
$var wire 7 D op_cc_in [6:0] $end
$var wire 16 E pc [15:0] $end
$var wire 1 " reset $end
$var wire 5 F op [4:0] $end
$var reg 7 G op_cc_out [6:0] $end
$var reg 16 H pc_follow [15:0] $end
$var reg 16 I value_out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx I
bx H
bx G
bx F
bx E
bx D
b0 C
b0 B
0A
b0 @
bx ?
bx >
0=
b0 <
1;
b0 :
b11000 9
bx 8
b1100000100100011 7
b0 6
bx 5
b0 4
b0 3
b1100000100100011 2
b1100000100100011 1
00
0/
b0 .
0-
bx ,
bx +
bx *
b0 )
0(
b1100000100100011 '
b0 &
bx %
bx $
bx #
0"
0!
$end
#10
1"
#20
0"
#30
b1001000110100 &
b1001000110100 :
b1001000110100 C
1=
b0 9
b100010100 '
b100010100 2
b100010100 7
b11000 F
b100010100 1
b1 4
b0 ,
b0 5
b0 8
b1100000 %
b1100000 >
b1100000 D
b0 #
b0 I
b100100011 @
1A
1!
#40
0!
#50
0=
b10100 9
0;
b0 F
b1010000000000000 '
b1010000000000000 2
b1010000000000000 7
b1100000 $
b1100000 G
b0 %
b0 >
b0 D
b0 +
b0 ?
b0 E
b1010000000000000 1
b10 4
b1 ,
b1 5
b1 8
b0 &
b0 :
b0 C
0A
1!
#60
0!
#70
b10100 F
b11 4
b10 ,
b10 5
b10 8
b1010000 %
b1010000 >
b1010000 D
b1 +
b1 ?
b1 E
b0 $
b0 G
b0 *
b0 H
1!
#80
0!
#90
b1010000 $
b1010000 G
b1 *
b1 H
b10 +
b10 ?
b10 E
b100 4
b11 ,
b11 5
b11 8
1!
#100
0!
#110
1(
b10011 9
b1001100000000000 '
b1001100000000000 2
b1001100000000000 7
b1001100000000000 1
b101 4
b100 ,
b100 5
b100 8
b11 +
b11 ?
b11 E
b10 *
b10 H
1!
#120
0!
#130
bx &
bx :
bx C
x0
bx )
bx 6
bx B
x=
x(
bx 9
bx <
x;
b10011 F
bx 3
bx '
bx 2
bx 7
1-
b11 *
b11 H
b1001100 %
b1001100 >
b1001100 D
b100 +
b100 ?
b100 E
bx 1
b110 4
b101 ,
b101 5
b101 8
1!
#140
0!
